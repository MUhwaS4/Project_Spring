package com.example.demo.lombok;

import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;

@SpringBootTest
public class exTest {
	
	@Test
	void 북테스트() {
		Book book1 = new Book();
		book1.title = "가나다1";
		book1.price = 20000;
		book1.compuny = "출판사1";
		book1.page = 120;
		
		Book book2 = new Book("가나다2", 30000, "출판사2", 250);
		
		Book book3 = Book
						.builder()
						.title("가나다3")
						.price(30000)
						.compuny("출판사3")
						.page(200)
						.build();
		
		System.out.println(book1);
		System.out.println(book2);
		System.out.println(book3);
	}
	
	@Test
	void 롬복2() {
		
		Car car1 = new Car(); // 디폴트생성자
		car1.setModel("차종1"); // setter
		car1.setCompuny("회사1");
		car1.setColor("색상1");
		System.out.println(car1.getModel()); // getter
		System.out.println(car1.getCompuny());
		System.out.println(car1.getColor());
		
		// 모든 멤버를 입력받는 생성자
		Car car2 = new Car("차종2", "회사2", "색상2");
		// 제정의된 toString
		System.out.println(car2.toString());
		
		// builder: 메소드 체인 패턴으로 객체를 생성하는 생성자
		// 값을 선택하여 입력할 수 있음
		Car car3 = Car // 객체
						.builder() // 준비
						.model("차종3") // 필드
						.compuny("회사3") // 필드
						.color("색상3") // 객체 생성
						.build();
		
		System.out.println(car1);
		System.out.println(car2);
		System.out.println(car3);
		
	}

}
