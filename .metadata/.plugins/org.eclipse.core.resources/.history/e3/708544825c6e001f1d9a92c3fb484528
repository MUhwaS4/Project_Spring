plugins { // 스프링 버전 등 자동 작성
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

// 프로젝트 메타 정보
group = 'com.example' 
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories { // 라이브러리가 있는 원격 저장소
	mavenCentral()
}

dependencies { // 라이브러리 - 프로젝트 생성 시 추가한 것들이 자동으로 기재됨
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}
// 프레임워크는 라이브러리 버전을 개발자가 직접 지정해줘야 하고 버전 충돌이 생기는 경우도 있음
// 부트는 스타터 패키지로 라이브러리와 버전을 알아서 관리함 충돌 문제를 줄이고 개발 속도 올림

tasks.named('test') {
	useJUnitPlatform()
}
